<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-export SYSTEM "http://xml.evernote.com/pub/evernote-export2.dtd">
<en-export export-date="20180113T140439Z" application="Evernote/Windows" version="6.x">
<note><title>13、视图层——WXML事件</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">

<en-note><div><span style="font-size: 32px;"><b>13、视图层——WXML事件</b></span></div><hr/><ul><li>事件是视图层到逻辑层的通讯方式。</li><li>事件可以将用户的行为反馈到逻辑层进行处理。</li><li>事件可以绑定在组件上，当达到触发事件，就会执行逻辑层中对应的事件处理函数。</li><li>事件对象可以携带额外信息，如 id, dataset, touches</li></ul><div><br/></div><div><span style="font-size: 24px;"><b>（1）事件分类</b></span></div><hr/><ul><li>冒泡事件：当一个组件上的事件被触发后，该事件会向父节点传递</li><li>非冒泡事件：当一个组件上的事件被触发后，该事件不会向父节点传递（组件自带的各种事件一般都是非冒泡事件）</li><li>冒泡事件列表</li></ul><table><thead><tr><th>类型</th><th>触发条件</th><th>最低版本</th></tr></thead><tbody><tr><td>touchstart</td><td>手指触摸动作开始</td><td><br/></td></tr><tr><td>touchmove</td><td>手指触摸后移动</td><td><br/></td></tr><tr><td>touchcancel</td><td>手指触摸动作被打断，如来电提醒，弹窗</td><td><br/></td></tr><tr><td>touchend</td><td>手指触摸动作结束</td><td><br/></td></tr><tr><td><span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">tap</span></td><td>手指触摸后马上离开</td><td><br/></td></tr><tr><td>longpress</td><td>手指触摸后，超过350ms再离开，如果指定了事件回调函数并触发了这个事件，tap事件将不被触发</td><td><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/framework/compatibility.html" title="基础库 1.5.0 开始支持，低版本需做兼容处理。">1.5.0</a></td></tr><tr><td>longtap</td><td>手指触摸后，超过350ms再离开（<span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">推荐使用longpress事件代替</span>）</td><td><br/></td></tr><tr><td>transitionend</td><td>会在 WXSS transition 或 wx.createAnimation 动画结束后触发</td><td><br/></td></tr><tr><td>animationstart</td><td>会在一个 WXSS animation 动画开始时触发</td><td><br/></td></tr><tr><td>animationiteration</td><td>会在一个 WXSS animation 一次迭代结束时触发</td><td><br/></td></tr><tr><td>animationend</td><td>会在一个 WXSS animation 动画完成时触发</td></tr></tbody></table><ul><li>除上表之外的其他组件自定义事件如无特殊声明都是非冒泡事件，如&lt;form/&gt;的submit事件，&lt;input/&gt;的input事件，&lt;scroll-view/&gt;的scroll事件，(详见各个组件)</li></ul><div><br/></div><div><span style="font-size: 24px;"><b>（2）绑定事件</b></span></div><hr/><ul><li>事件绑定的写法同组件的属性，以 key、value 的形式</li><li>key 以bind或catch开头，然后跟上事件的类型，如bindtap、catchtouchstart。自基础库版本 1.5.0 起，bind和catch后可以紧跟一个冒号，其含义不变，如bind:tap、、catch:touchstart</li><li>value 是一个字符串，需要在对应的 Page 中定义同名的函数。不然当触发事件的时候会报错</li></ul><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>&lt;view id=&quot;tapTest&quot; data-hi=&quot;WeChat&quot; bindtap=&quot;<span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">tapName</span>&quot;&gt; Click me! &lt;/view&gt;</div><div><br/></div><div>Page({</div><div>&nbsp; <span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">tapName</span>: function(event) {</div><div>&nbsp; &nbsp; console.log(event)</div><div>&nbsp; }</div><div>})</div></div><div><br/></div><ul><li>bind事件绑定不会阻止冒泡事件向上冒泡，catch事件绑定可以阻止冒泡事件向上冒泡</li><li>代码例子
<ul><li>点击 inner view 会先后调用handleTap3和handleTap2(因为tap事件会冒泡到 middle view，而 middle view 阻止了 tap 事件冒泡，不再向父节点传递)</li><li>点击 middle view 会触发handleTap2</li><li>点击 outer view 会触发handleTap1</li></ul></li></ul><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>&lt;view id=&quot;outer&quot; <span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">bindtap</span>=&quot;handleTap1&quot;&gt;<br/>
&nbsp; outer view<br/>
&nbsp; &lt;view id=&quot;middle&quot; <span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">catchtap</span>=&quot;handleTap2&quot;&gt;<br/>
&nbsp; &nbsp; middle view<br/>
&nbsp; &nbsp; &lt;view id=&quot;inner&quot; <span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">bindtap</span>=&quot;handleTap3&quot;&gt;<br/>
&nbsp; &nbsp; &nbsp; inner view<br/>
&nbsp; &nbsp; &lt;/view&gt;</div><div>&nbsp; &lt;/view&gt;</div><div>&lt;/view&gt;</div></div><div><br/></div><div><span style="font-size: 24px;"><b>（3）捕获阶段</b></span></div><hr/><ul><li>自基础库版本 1.5.0 起，触摸类事件支持捕获阶段</li><li><span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">捕获阶段位于冒泡阶段之前</span>，且在捕获阶段中，<span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">事件到达节点的顺序与冒泡阶段恰好相反</span></li><li>需要在捕获阶段监听事件时，可以采用capture-bind、capture-catch关键字，<span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">后者将中断捕获阶段和取消冒泡阶段</span>。</li><li>代码例子1
<ul><li>点击inner view</li><li>由于捕获先于冒泡且传递顺序由父view到子view,触发capture-bind:touchstart=&quot;<span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">handleTap2</span>&quot;</li><li>capture-bind:touchstart不会中断冒泡和捕获，先执行捕获capture-bind:touchstart=&quot;<span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">handleTap4</span>&quot;</li><li>此时只剩下冒泡阶段了，由子到父，先bind:touchstart=&quot;<span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">handleTap3</span>&quot;</li><li>再bind:touchstart=&quot;handleTap1&quot;</li></ul></li></ul><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>&lt;view id=&quot;outer&quot; <span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">bind:touchstart</span>=&quot;handleTap1&quot; <span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">capture-bind:touchstart</span>=&quot;handleTap2&quot;&gt;<br/>
&nbsp; outer view<br/>
&nbsp; &lt;view id=&quot;inner&quot; <span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">bind:touchstart</span>=&quot;handleTap3&quot; <span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">capture-bind:touchstart</span>=&quot;handleTap4&quot;&gt;<br/>
&nbsp; &nbsp; inner view</div><div>&nbsp; &lt;/view&gt;</div><div>&lt;/view&gt;</div></div><ul><li>代码例子2
<ul><li>capture-catch关键字将中断捕获阶段和取消冒泡阶段，将只触发handleTap2</li></ul></li></ul><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>&lt;view id=&quot;outer&quot; bind:touchstart=&quot;handleTap1&quot; <span style="color: rgb(255, 0, 0);"><b><span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">capture-catch:touchstart=&quot;handleTap2&quot;</span></b></span>&gt;<br/>
&nbsp; outer view<br/>
&nbsp; &lt;view id=&quot;inner&quot; bind:touchstart=&quot;handleTap3&quot; capture-bind:touchstart=&quot;handleTap4&quot;&gt;<br/>
&nbsp; &nbsp; inner view<br/>
&nbsp; &lt;/view&gt;&lt;/view&gt;</div></div><div><br/></div><div><span style="font-size: 24px;"><b>（4）事件对象</b></span></div><hr/><ul><li>如无特殊说明，当组件触发事件时，逻辑层绑定该事件的处理函数会收到一个事件对象</li><li>bindTap</li></ul><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>&lt;view <span style="color: rgb(255, 0, 0);"><span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">id</span></span>=&quot;tapTest&quot; <span style="color: rgb(255, 0, 0);"><span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">data-hi</span></span>=&quot;WeChat&quot; <span style="color: rgb(255, 0, 0);"><span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">bindtap</span></span>=&quot;<b>tapName</b>&quot;&gt; Click me! &lt;/view&gt;</div><div><br/></div><div>Page({<br/>
&nbsp; <b>tapName</b>: function(event) {<br/>
&nbsp; &nbsp; console.log(event)<br/>
&nbsp; }</div><div>})</div><div><br/></div><div>{</div><div style="margin-left:40px;">&quot;<span style="color: rgb(255, 0, 0);"><b><span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">type</span></b></span>&quot;:&quot;tap&quot;,</div><div style="margin-left:40px;">&quot;<span style="color: rgb(255, 0, 0);"><b><span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">timeStamp</span></b></span>&quot;:895,</div><div style="margin-left:40px;">&quot;<span style="color: rgb(255, 0, 0);"><b><span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">target</span></b></span>&quot;: {</div><div style="margin-left:40px;">&nbsp; &quot;id&quot;: &quot;tapTest&quot;,</div><div style="margin-left:40px;">&nbsp; &quot;<b><span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">dataset</span></b>&quot;:&nbsp; {</div><div style="margin-left:40px;">&nbsp; &nbsp; <span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">&quot;hi&quot;:&quot;WeChat&quot;</span></div><div style="margin-left:40px;">&nbsp; }</div><div style="margin-left:40px;">},</div><div style="margin-left:40px;">&quot;<span style="color: rgb(255, 0, 0);"><b><span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">currentTarget</span></b></span>&quot;:&nbsp; {</div><div style="margin-left:40px;">&nbsp; &quot;id&quot;: &quot;tapTest&quot;,</div><div style="margin-left:40px;">&nbsp; &quot;dataset&quot;: {</div><div style="margin-left:40px;">&nbsp; &nbsp; &quot;hi&quot;:&quot;WeChat&quot;</div><div style="margin-left:40px;">&nbsp; }</div><div style="margin-left:40px;">},</div><div style="margin-left:40px;">&quot;detail&quot;: {</div><div style="margin-left:40px;">&nbsp; &quot;x&quot;:53,</div><div style="margin-left:40px;">&nbsp; &quot;y&quot;:14</div><div style="margin-left:40px;">},</div><div style="margin-left:40px;">&quot;touches&quot;:[{</div><div style="margin-left:40px;">&nbsp; &quot;identifier&quot;:0,</div><div style="margin-left:40px;">&nbsp; &quot;pageX&quot;:53,</div><div style="margin-left:40px;">&nbsp; &quot;pageY&quot;:14,</div><div style="margin-left:40px;">&nbsp; &quot;clientX&quot;:53,</div><div style="margin-left:40px;">&nbsp; &quot;clientY&quot;:14</div><div style="margin-left:40px;">}],</div><div style="margin-left:40px;">&quot;changedTouches&quot;:[{</div><div style="margin-left:40px;">&nbsp; &quot;identifier&quot;:0,</div><div style="margin-left:40px;">&nbsp; &quot;pageX&quot;:53,</div><div style="margin-left:40px;">&nbsp; &quot;pageY&quot;:14,</div><div style="margin-left:40px;">&nbsp; &quot;clientX&quot;:53,</div><div style="margin-left:40px;">&nbsp; &quot;clientY&quot;:14</div><div style="margin-left:40px;">}]</div><div>}</div></div><div><br/></div><ul><li>打印出来的log信息
<ul><li>BaseEvent 基础事件对象属性列表
<ul><li>type &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;String &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 事件类型</li><li>timeStamp &nbsp; &nbsp; &nbsp; &nbsp; Integer &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;页面打开到触发事件所经过的毫秒数。</li><li>target &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Object &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; 触发事件的组件的一些属性值集合
<ul><li>id &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;String &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;事件源组件的id</li><li>tagName &nbsp; &nbsp;String &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;当前组件的类型</li><li><span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">dataset &nbsp; &nbsp; &nbsp;&nbsp;</span>Object &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;事件源组件上由<span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">data-开头</span>的自定义属性组成的集合</li></ul></li></ul></li></ul></li><li style="display:inline;list-style:none;"><ul><li style="display:inline;list-style:none;"><ul><li>currentTarget &nbsp; &nbsp;&nbsp;Object &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 当前组件的一些属性值集合
<ul><li>id String 事件源组件的id</li><li>tagName String 当前组件的类型</li><li>dataset Object 事件源组件上由data-开头的自定义属性组成的集合</li></ul></li></ul></li><li>CustomEvent 自定义事件对象属性列表（继承 BaseEvent）
<ul><li>detail &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;Object &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;额外的信息</li></ul></li><li>TouchEvent 触摸事件对象属性列表（继承 BaseEvent）
<ul><li>touches &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;Array &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;触摸事件，当前停留在屏幕中的触摸点信息的数组</li><li>changedTouches &nbsp; &nbsp; &nbsp; Array &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;触摸事件，当前变化的触摸点信息的数组</li></ul></li></ul></li></ul><div><span style="font-size: 12px;"><span style="font-family: Monaco, Menlo, Consolas, &apos;Courier New&apos;, monospace;"><span style="color: rgb(51, 51, 51);"><br/></span></span></span></div><div><span style="font-size: 21px;"><b><font color="#333333">事件属性详解</font></b></span></div><div><hr/></div><div><span style="font-size: 12px;"><span style="font-family: Monaco, Menlo, Consolas, &apos;Courier New&apos;, monospace;"><span style="color: rgb(51, 51, 51);"><br/></span></span></span></div><ul><li>target和currentTarget区别
<ul><li>target 和 currentTarget 可以参考上例中</li><li>点击 inner view 时，handleTap3 收到的事件对象 target 和 currentTarget 都是 inner</li><li>而 handleTap2 收到的事件对象 target 就是 inner，currentTarget 就是 middle。</li></ul></li><li>dataset
<ul><li>在组件中可以定义数据，这些数据将会通过事件传递给 SERVICE</li><li>书写方式： 以data-开头，多个单词由连字符-链接，不能有大写(大写会自动转成小写)如data-element-type</li><li>最终在 event.currentTarget.dataset 中会将连字符转成驼峰elementType</li></ul></li></ul><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>&lt;view data-<span style="color: rgb(255, 0, 0);"><b><span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">alpha-beta</span></b></span>=&quot;1&quot; data-<span style="color: rgb(255, 0, 0);"><b><span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">alphaBeta</span></b></span>=&quot;2&quot; bindtap=&quot;bindViewTap&quot;&gt; DataSet Test &lt;/view&gt;</div><div><br/></div><div>Page({<br/>
&nbsp; bindViewTap:function(event){<br/>
&nbsp; &nbsp; event.currentTarget.dataset.<span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">alphaBeta</span> === 1 // - 会转为驼峰写法<br/>
&nbsp; &nbsp; event.currentTarget.dataset.<span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">alphabeta</span> === 2 // 大写会转为小写<br/>
&nbsp; }<br/>
})</div></div><ul><li>touches
<ul><li>touches 是一个数组，每个元素为一个 Touch 对象（canvas 触摸事件中携带的 touches 是 CanvasTouch 数组）。 表示当前停留在屏幕上的触摸点</li><li>identifier &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Number &nbsp; &nbsp;&nbsp;触摸点的标识符</li><li>pageX, pageY &nbsp; &nbsp; &nbsp;Number &nbsp; &nbsp;&nbsp;距离文档左上角的距离，文档的左上角为原点 ，横向为X轴，纵向为Y轴</li><li>clientX, clientY &nbsp; &nbsp;&nbsp;Number &nbsp; &nbsp;&nbsp;距离页面可显示区域（屏幕除去导航条）左上角距离，横向为X轴，纵向为Y轴</li></ul></li><li>changedTouches
<ul><li>changedTouches 数据格式同 touches。 表示有变化的触摸点，如从无变有（touchstart），位置变化（touchmove），从有变无（touchend、touchcancel）</li></ul></li><li>canvasTouch对象</li></ul><div><table><thead><tr><th>属性</th><th>类型</th><th>说明</th><th>特殊说明</th></tr></thead><tbody><tr><td>identifier</td><td>Number</td><td>触摸点的标识符</td><td><br/></td></tr><tr><td>x, y</td><td>Number</td><td>距离 Canvas 左上角的距离，Canvas 的左上角为原点 ，横向为X轴，纵向为Y轴</td></tr></tbody></table></div><ul><li>detail（表单组件的值）
<ul><li>自定义事件所携带的数据，如表单组件的提交事件会携带用户的输入，媒体的错误事件会携带错误信息</li><li>详见组件定义中各个事件的定义。</li><li>点击事件的detail 带有的 x, y 同 pageX, pageY 代表距离文档左上角的距离。</li></ul></li></ul><div><br/></div></en-note>]]></content><created>20170112T141057Z</created><updated>20180102T030156Z</updated><note-attributes><author>372251027@qq.com</author><source>desktop.win</source><source-url>https://mp.weixin.qq.com/debug/wxadoc/dev/framework/view/wxml/event.html?t=2017112</source-url><source-application>evernote.win32</source-application></note-attributes></note></en-export>
